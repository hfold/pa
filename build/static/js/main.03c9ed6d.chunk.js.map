{"version":3,"sources":["logo.svg","../node_modules/@stacks/connect-ui/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","common/utils/auth.js","store/UserContext.js","common/utils/globals.js","common/utils/readonly.js","common/utils/contractCall.js","pages/Whitelist.js","pages/MintEvent.js","pages/AddPunks.js","pages/SignedIn.js","pages/SignIn.js","pages/Main.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","appConfig","AppConfig","userSession","UserSession","authOptions","appDetails","name","icon","window","location","origin","redirectTo","onFinish","reload","UserContext","React","createContext","initialState","logged","theme","userData","isOwner","mintEvent","mintAddresses","txs","reducer","state","action","type","obj","tx","tx_id","find","UserContextProvider","props","useReducer","value","UserState","UserDispatch","Provider","children","Consumer","network","_network","StacksTestnet","StacksMainnet","SELECTED_NETWORK","CONTRACT_ADDRESS","COLLECTION_URL","CONTRACT_NAME","NETWORK","getLastTokenId","a","args","cb","ecb","console","log","callReadOnlyFunction","contractAddress","globals","contractName","functionName","functionArgs","senderAddress","profile","stxAddress","result","cvToJSON","getLastPunkId","isOpenMinting","cvToString","isCtxOwner","currentMintEvent","addAddress","principal","doContractCall","standardPrincipalCV","onCancel","removeAddress","openMintEvent","mint_price","public_value","address_mint","uintCV","closeMintEvent","addPunk","list","n","i","array","el","attrs","attributes","tv","tupleCV","trait_type","stringAsciiCV","String","push","description","image","external_url","edition","listCV","Whitelist","useConnect","useContext","useState","address","setAddress","_address","_setAddress","adding","setAdding","removing","setRemoving","floating","onChange","target","for","color","style","className","size","onClick","placement","trigger","contractCall","MintEvent","loaded","setLoaded","current","setCurrent","is_open","setIsOpen","stx","setStx","_private","setPrivate","addrm","setAddrm","useEffect","ReadOnly","fontSize","width","height","marginRight","fill","display","viewBox","class","d","stroke","stroke-width","stroke-linejoin","fontWeight","fontStyle","parseInt","json_val","setJsonVal","total_to_add","setTotalToAdd","added","setAdded","mintPunks","current_i","chunk","full_array","last_index","slice","length","setTimeout","mode","newValue","editorProps","$blockScrolling","values","JSON","parse","avatarUrl","Person","SignedInClass","loading","mounted","currentTab","this","setState","context","fluid","xs","sm","md","pills","vertical","active","href","textAlign","src","marginLeft","signUserOut","getChild","Component","contextType","SignIn","setLoading","doOpenAuth","alignItems","margin","textTransform","Main","user","isSignInPending","handlePendingSignIn","history","replaceState","document","title","isUserSignedIn","loadUserData","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03c9ed6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","var map = {\n\t\"./connect-modal.entry.js\": [\n\t\t625,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 612;\nmodule.exports = webpackAsyncContext;","import { AppConfig, UserSession, showConnect } from '@stacks/connect';\nimport { Person } from '@stacks/profile';\n\nconst appConfig = new AppConfig(['store_write', 'publish_data']);\n\nexport const userSession = new UserSession({ appConfig });\n\nexport const authOptions = {\n      appDetails: {\n        name: 'Punk Army NFT',\n        icon: window.location.origin + '/images/logo.png',\n      },\n      redirectTo: '/',\n      onFinish: () => {\n        window.location.reload();\n      },\n      userSession: userSession,\n    };\n\nexport function getUserData() {\n  return userSession.loadUserData();\n}\n\nexport function getPerson() {\n  return new Person(getUserData().profile);\n}\n","import React from 'react';\n\nlet UserContext = React.createContext();\n\nlet initialState = {\n  logged: false,\n  theme: 'dark',\n  userData: {\n  },\n  isOwner: false,\n  mintEvent: {},\n  mintAddresses: [],\n  txs: []\n};\n\nlet reducer = (state, action) => {\n\t\n  switch (action.type) {\n    case \"update\":\n      return {\n        ...state,\n        ...action.obj\n      };\n    case \"logout\":\n      return initialState;\n    case \"add_transaction\":\n      if(action.tx && action.tx.tx_id) {\n        let exists = state.txs.find(tx => tx.tx_id === action.tx.tx_id)\n        if(exists) {\n          return {\n            ...state,\n            txs: state.txs.map(tx => {\n              return (tx.tx_id === action.tx.tx_id) ? action.tx : tx\n            })\n          };\n        } else {\n          return {\n            ...state,\n            txs: [...state.txs, action.tx]\n          };\n        }\n      } else {\n        return {...state}\n      }\n    case \"change_theme\":\n      return {\n        ...state,\n        theme: action.theme\n      };\n    default:\n      return action.obj;\n    \n  }\n};\n\nfunction UserContextProvider(props) {\n\n  let [UserState, UserDispatch] = React.useReducer(reducer, initialState);\n  \n  let value = { UserState, UserDispatch };\n\n  return (\n    <UserContext.Provider value={value}>{props.children}</UserContext.Provider>\n  );\n}\n\nlet UserContextConsumer = UserContext.Consumer;\n\nexport { UserContext, UserContextProvider, UserContextConsumer };","import { StacksMainnet, StacksTestnet } from '@stacks/network';\n\nconst network = window.network;\nlet _network = null; //network == 'testnet' ? new StacksTestnet() : new StacksMainnet();\n\n\nif(network == 'testnet') {\n\t_network= new StacksTestnet();\n\t//_network.coreApiUrl = 'https://stacks-node-api.regtest.stacks.co';\n} else {\n\t_network= new StacksMainnet();\n\t//_network.coreApiUrl = 'https://stacks-node-api.stacks.co';\n}\n\nexport default {\n\tSELECTED_NETWORK: network,\n\tCONTRACT_ADDRESS: window.COLLECTION_URL,\n\tCONTRACT_NAME: window.CONTRACT_NAME,\n\tNETWORK: _network,\n\tCOLLECTION_URL: window.COLLECTION_URL\n}","import React from 'react';\n\nimport {  \n\tintCV,\n\tuintCV,\n\ttrueCV,\n\tfalseCV,\n\tnoneCV,\n\tsomeCV,\n\tstringAsciiCV,\n\tstringUtf8CV,\n\tstandardPrincipalCV,\n\tcontractPrincipalCV,\n\tresponseErrorCV,\n\tresponseOkCV,\n\ttupleCV,\n\tlistCV,\n\thexToCV,\n\tcvToHex,\n\n\tcvToString,\n\tstringToCV,\n\tcvToJSON\n} from '@stacks/transactions';\nimport {callReadOnlyFunction} from '@stacks/transactions';\nimport { StacksMainnet, StacksTestnet } from '@stacks/network';\n\nimport globals from './globals'\n\n\n\nexport default {\n\t\n\tgetLastTokenId: async (args = [], UserState, cb = null, ecb = null) => {\n\t\t\tconsole.log('calling get last token id')\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tlet result = await callReadOnlyFunction({\n\t\t\t\t  contractAddress: globals.CONTRACT_ADDRESS,\n\t\t\t\t  contractName: globals.CONTRACT_NAME,\n\t\t\t\t  functionName: 'get-last-token-id',\n\t\t\t\t  network: globals.NETWORK,\n\t\t\t\t  functionArgs: [...args],\n\t\t\t\t  senderAddress: UserState.userData.profile.stxAddress[globals.SELECTED_NETWORK]\n\t\t\t\t})\n\t\t\t\tif(cb) cb( cvToJSON(result).value.value )\n\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log('error', e)\n\t\t\t\tif(ecb) ecb(e)\n\t\t\t}\n\t\t},\n\n\tgetLastPunkId: async (args = [], UserState, cb = null, ecb = null) => {\n\t\t\tconsole.log('calling get last token id')\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tlet result = await callReadOnlyFunction({\n\t\t\t\t  contractAddress: globals.CONTRACT_ADDRESS,\n\t\t\t\t  contractName: globals.CONTRACT_NAME,\n\t\t\t\t  functionName: 'get_last_punk',\n\t\t\t\t  network: globals.NETWORK,\n\t\t\t\t  functionArgs: [...args],\n\t\t\t\t  senderAddress: UserState.userData.profile.stxAddress[globals.SELECTED_NETWORK]\n\t\t\t\t})\n\t\t\t\tif(cb) cb( cvToJSON(result).value.value )\n\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log('error', e)\n\t\t\t\tif(ecb) ecb(e)\n\t\t\t}\n\t\t},\n\n\tisOpenMinting: async (args = [], UserState, cb = null, ecb = null) => {\n\t\t\tconsole.log('calling get last token id')\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tlet result = await callReadOnlyFunction({\n\t\t\t\t  contractAddress: globals.CONTRACT_ADDRESS,\n\t\t\t\t  contractName: globals.CONTRACT_NAME,\n\t\t\t\t  functionName: 'is_open_minting',\n\t\t\t\t  network: globals.NETWORK,\n\t\t\t\t  functionArgs: [...args],\n\t\t\t\t  senderAddress: UserState.userData.profile.stxAddress[globals.SELECTED_NETWORK]\n\t\t\t\t})\n\t\t\t\tif(cb) cb( cvToString(result) === 'true' )\n\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log('error', e)\n\t\t\t\tif(ecb) ecb(e)\n\t\t\t}\n\t\t},\n\n\tisCtxOwner: async (args = [], UserState, cb = null, ecb = null) => {\n\t\t\tconsole.log('calling is owner')\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tlet result = await callReadOnlyFunction({\n\t\t\t\t  contractAddress: globals.CONTRACT_ADDRESS,\n\t\t\t\t  contractName: globals.CONTRACT_NAME,\n\t\t\t\t  functionName: 'is_nft_contract_owner',\n\t\t\t\t  network: globals.NETWORK,\n\t\t\t\t  functionArgs: [...args],\n\t\t\t\t  senderAddress: UserState.userData.profile.stxAddress[globals.SELECTED_NETWORK]\n\t\t\t\t})\n\t\t\t\tif(cb) cb( cvToString(result) === 'true' )\n\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log('error', e)\n\t\t\t\tif(ecb) ecb(e)\n\t\t\t}\n\t\t},\n\n\tcurrentMintEvent: async (args = [], UserState, cb = null, ecb = null) => {\n\t\t\tconsole.log('calling current mint event')\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tlet result = await callReadOnlyFunction({\n\t\t\t\t  contractAddress: globals.CONTRACT_ADDRESS,\n\t\t\t\t  contractName: globals.CONTRACT_NAME,\n\t\t\t\t  functionName: 'current_mint_event',\n\t\t\t\t  network: globals.NETWORK,\n\t\t\t\t  functionArgs: [...args],\n\t\t\t\t  senderAddress: UserState.userData.profile.stxAddress[globals.SELECTED_NETWORK]\n\t\t\t\t})\n\t\t\t\tif(cb) cb( cvToJSON(result).value )\n\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log('error', e)\n\t\t\t\tif(ecb) ecb(e)\n\t\t\t}\n\t\t}\n}","import React from 'react';\n\nimport {  \n\tintCV,\n\tuintCV,\n\ttrueCV,\n\tfalseCV,\n\tnoneCV,\n\tsomeCV,\n\tstringAsciiCV,\n\tstringUtf8CV,\n\tstandardPrincipalCV,\n\tcontractPrincipalCV,\n\tresponseErrorCV,\n\tresponseOkCV,\n\ttupleCV,\n\tlistCV,\n\thexToCV,\n\tcvToHex,\n\n\tcvToString,\n\tcvToJSON\n} from '@stacks/transactions';\nimport {callReadOnlyFunction} from '@stacks/transactions';\n\nimport { StacksMainnet, StacksTestnet } from '@stacks/network';\n\nimport globals from './globals'\n\n\nexport default {\n\t\n\taddAddress: async (args = {principal:''}, UserState, doContractCall, cb = null, ecb = null) => {\n\t\t\tconsole.log('calling add contractAddress')\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tdoContractCall({\n\t\t\t\t      contractAddress: globals.CONTRACT_ADDRESS,\n\t\t\t\t      contractName: globals.CONTRACT_NAME,\n\t\t\t\t      functionName: 'add_address_to_mint_event',\n\t\t\t\t      functionArgs: [standardPrincipalCV(args.principal)],\n\t\t\t\t      onFinish: (result) => {\n\t\t\t\t      \tconsole.log('onFinish', result)\n\t\t\t\t      \tif(cb) cb( result )\n\t\t\t\t      },\n\t\t\t\t      onCancel: (result) => {\n\t\t\t\t      \tconsole.log('onFinish', result)\n\t\t\t\t      \tif(ecb) ecb( result )\n\t\t\t\t      },\n\t\t\t\t      network: globals.NETWORK,\n\t\t\t\t      stxAddress: UserState.userData.profile.stxAddress[globals.SELECTED_NETWORK],\n\t\t\t\t    });\n\t\t\t\t\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log('error', e)\n\t\t\t\tif(ecb) ecb(e)\n\t\t\t}\n\t\t},\n\n\tremoveAddress: async (args = {principal:''}, UserState, doContractCall, cb = null, ecb = null) => {\n\t\t\tconsole.log('calling add contractAddress')\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tdoContractCall({\n\t\t\t\t      contractAddress: globals.CONTRACT_ADDRESS,\n\t\t\t\t      contractName: globals.CONTRACT_NAME,\n\t\t\t\t      functionName: 'remove_address_to_mint_event',\n\t\t\t\t      functionArgs: [standardPrincipalCV(args.principal)],\n\t\t\t\t      onFinish: (result) => {\n\t\t\t\t      \tconsole.log('onFinish', result)\n\t\t\t\t      \tif(cb) cb( result )\n\t\t\t\t      },\n\t\t\t\t      onCancel: (result) => {\n\t\t\t\t      \tconsole.log('onFinish', result)\n\t\t\t\t      \tif(ecb) ecb( result )\n\t\t\t\t      },\n\t\t\t\t      network: globals.NETWORK,\n\t\t\t\t      stxAddress: UserState.userData.profile.stxAddress[globals.SELECTED_NETWORK],\n\t\t\t\t    });\n\t\t\t\t\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log('error', e)\n\t\t\t\tif(ecb) ecb(e)\n\t\t\t}\n\t\t},\n\n\topenMintEvent: async (args = {mint_price:0, public_value: 0, address_mint: 0}, UserState, doContractCall, cb = null, ecb = null) => {\n\t\t\tconsole.log('calling add contractAddress')\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tdoContractCall({\n\t\t\t\t      contractAddress: globals.CONTRACT_ADDRESS,\n\t\t\t\t      contractName: globals.CONTRACT_NAME,\n\t\t\t\t      functionName: 'open_mint_event',\n\t\t\t\t      functionArgs: [uintCV(args.mint_price),uintCV(args.public_value)],\n\t\t\t\t      onFinish: (result) => {\n\t\t\t\t      \tconsole.log('onFinish', result)\n\t\t\t\t      \tif(cb) cb( result )\n\t\t\t\t      },\n\t\t\t\t      onCancel: (result) => {\n\t\t\t\t      \tconsole.log('onFinish', result)\n\t\t\t\t      \tif(ecb) ecb( result )\n\t\t\t\t      },\n\t\t\t\t      network: globals.NETWORK,\n\t\t\t\t      stxAddress: UserState.userData.profile.stxAddress[globals.SELECTED_NETWORK],\n\t\t\t\t    });\n\t\t\t\t\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log('error', e)\n\t\t\t\tif(ecb) ecb(e)\n\t\t\t}\n\t\t},\n\n\tcloseMintEvent: async (args = {}, UserState, doContractCall, cb = null, ecb = null) => {\n\t\t\tconsole.log('calling add contractAddress')\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tdoContractCall({\n\t\t\t\t      contractAddress: globals.CONTRACT_ADDRESS,\n\t\t\t\t      contractName: globals.CONTRACT_NAME,\n\t\t\t\t      functionName: 'close_mint_event',\n\t\t\t\t      functionArgs: [],\n\t\t\t\t      onFinish: (result) => {\n\t\t\t\t      \tconsole.log('onFinish', result)\n\t\t\t\t      \tif(cb) cb( result )\n\t\t\t\t      },\n\t\t\t\t      onCancel: (result) => {\n\t\t\t\t      \tconsole.log('onFinish', result)\n\t\t\t\t      \tif(ecb) ecb( result )\n\t\t\t\t      },\n\t\t\t\t      network: globals.NETWORK,\n\t\t\t\t      stxAddress: UserState.userData.profile.stxAddress[globals.SELECTED_NETWORK],\n\t\t\t\t    });\n\t\t\t\t\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log('error', e)\n\t\t\t\tif(ecb) ecb(e)\n\t\t\t}\n\t\t},\n\n\taddPunk: async (args = {list: []}, UserState, doContractCall, cb = null, ecb = null) => {\n\t\t\tconsole.log('calling add punks')\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tlet n = 120; // max number\n\t\t\t\tlet i = 0;\n\t\t\t\tlet array = args.list;\n\t\t\t  \tlet list = [];\n\t\t\t  \tarray.map( el => {\n\t\t\t  \t\tif(i == n) return;\n\n\t\t\t\t  \t\n\t\t\t\t  \tlet attrs = [];\n\t\t\t\t  \tel.attributes.map((a)=>{\n\t\t\t\t  \t\t\n\t\t\t\t  \t\tlet tv = tupleCV({\n\t\t\t\t  \t\t\t\ttrait_type: stringAsciiCV(a.trait_type),\n\t\t\t\t  \t\t\t\tvalue: stringAsciiCV(String(a.value)),\n\t\t\t\t  \t\t\t});\n\t\t\t\t  \t\t\n\t\t\t\t  \t\tattrs.push(\n\t\t\t\t  \t\t\ttv\n\t\t\t\t  \t\t)\n\t\t\t\t  \t})\n\n\t\t\t\t  \t\n\t\t\t\t  \tlist.push(tupleCV({\n\t\t\t\t  \t\tname: stringAsciiCV(el.name),\n\t\t\t\t  \t\tdescription: stringAsciiCV(el.description),\n\t\t\t\t  \t\timage: stringAsciiCV(el.image),\n\t\t\t\t  \t\texternal_url: stringAsciiCV(globals.COLLECTION_URL),\n\t\t\t\t  \t\tedition: uintCV(1),\n\t\t\t\t  \t\tattributes: listCV(attrs)\n\t\t\t\t  \t}))\n\n\t\t\t\t  \ti++;\n\t\t\t\t});\n\n\t\t\t  \tconsole.log('invio', listCV(list) )\n\t\t\t\tdoContractCall({\n\t\t\t\t      contractAddress: globals.CONTRACT_ADDRESS,\n\t\t\t\t      contractName: globals.CONTRACT_NAME,\n\t\t\t\t      functionName: 'create-multiple-punk',\n\t\t\t\t      functionArgs: [listCV(list)],\n\t\t\t\t      onFinish: (result) => {\n\t\t\t\t      \tconsole.log('onFinish', result)\n\t\t\t\t      \tif(cb) cb( result )\n\t\t\t\t      },\n\t\t\t\t      onCancel: (result) => {\n\t\t\t\t      \tconsole.log('onFinish', result)\n\t\t\t\t      \tif(ecb) ecb( result )\n\t\t\t\t      },\n\t\t\t\t      network: globals.NETWORK,\n\t\t\t\t      stxAddress: UserState.userData.profile.stxAddress[globals.SELECTED_NETWORK],\n\t\t\t\t    });\n\t\t\t\t\n\t\t\t} catch(e) {\n\t\t\t\tconsole.log('error', e)\n\t\t\t\tif(ecb) ecb(e)\n\t\t\t}\n\t\t},\n\n\t\n\t\n}","import React from 'react';\nimport {FormGroup, Input, Label, Button, Spinner,\nUncontrolledPopover,\nPopoverHeader,\nPopoverBody} from 'reactstrap';\n\nimport contractCall from '../common/utils/contractCall';\nimport {\n  UserContext\n} from '../store/UserContext';\n\nimport { useConnect } from \"@stacks/connect-react\";\n\nconst addAddress = (address, UserState) => {}\n\nconst removeAddress = (address, UserState) => {}\n\n\n\nexport default function Whitelist (props) {\n\tconst {doContractCall} = useConnect();\n\n\tconst {UserState, UserDispatch} = React.useContext(UserContext);\n\n\tconst [address, setAddress] = React.useState('')\n\tconst [_address, _setAddress] = React.useState('')\n\n\tconst [adding, setAdding] = React.useState(false)\n\tconst [removing, setRemoving] = React.useState(false)\t\n\t\n\treturn <>\n\t\t<h3>Add address in whitelist</h3>\n\t\t<p>Add an address to whitelist for mint events</p>\n\t\t<FormGroup floating>\n\t\t\t<Input value={address} id=\"add_address\" onChange={(e)=>setAddress(e.target.value)} />\n\t\t\t<Label for=\"add_address\">\n\t\t        STX Address\n\t      \t</Label>\n\t\t</FormGroup>\n\t\t<Button id=\"confirm_add\" color=\"primary\" style={{color: '#fff'}} className=\"mb-3\" size=\"md\" onClick={async () => null}>\n\t\t\t{adding ? <Spinner size=\"sm\" /> : <b>Confirm</b>}\n\t\t</Button>\n\t\t\n\n\t\t<hr />\n\n\t\t<h3 className=\"mt-3\">Remove address from whitelist</h3>\n\t\t<p>Remove an address to whitelist for mint events</p>\n\t\t<FormGroup floating>\n\t\t\t<Input value={_address} id=\"remove_address\" onChange={(e)=>_setAddress(e.target.value)} />\n\t\t\t<Label for=\"remove_address\">\n\t\t        STX Address\n\t      \t</Label>\n\t\t</FormGroup>\n\t\t<Button id=\"confirm_remove\" color=\"danger\" style={{color: '#fff'}} onClick={async () => null}>\n\t\t\t{removing ? <Spinner size=\"sm\" /> : <b>Confirm</b>}\n\t\t</Button>\n\n\n\t\t<UncontrolledPopover\n\t\t    placement=\"bottom\"\n\t\t    target=\"confirm_add\"\n\t\t    trigger=\"focus\"\n\t\t  >\n\t\t    <PopoverBody>\n\t\t      Are you sure to add this address?<br />\n\t\t      \t<Button color=\"primary\" style={{color: '#fff'}} className=\"mb-3\" size=\"sm\" onClick={async () => {\n\t\t      \t\tsetAdding(true)\n\t\t      \t\tcontractCall.addAddress({principal: address}, UserState, doContractCall, (result)=>{\n\t\t      \t\t\tsetAdding(false)\n\t\t      \t\t\tUserDispatch({\n\t\t      \t\t\t\ttype: 'add_transaction',\n\t\t      \t\t\t\ttx: result\n\t\t      \t\t\t})\n\t\t      \t\t}, (result)=>{\n\t\t      \t\t\tsetAdding(false)\n\t\t      \t\t\tUserDispatch({\n\t\t      \t\t\t\ttype: 'add_transaction',\n\t\t      \t\t\t\ttx: result\n\t\t      \t\t\t})\n\t\t      \t\t})\n\t\t      \t}}>\n\t\t\t\t\t{adding ? <Spinner size=\"sm\" /> : 'Yes'}\n\t\t\t\t</Button>\n\t\t    </PopoverBody>\n\t  \t</UncontrolledPopover>\n\t  \t<UncontrolledPopover\n\t\t    placement=\"bottom\"\n\t\t    target=\"confirm_remove\"\n\t\t    trigger=\"focus\"\n\t\t  >\n\t\t    <PopoverBody>\n\t\t      Are you sure to remove this address?<br />\n\t\t      <Button color=\"primary\" style={{color: '#fff'}} className=\"mb-3\" size=\"sm\" onClick={async () => {\n\t\t      \t\tsetRemoving(true)\n\t\t      \t\tcontractCall.removeAddress({principal: _address}, UserState, doContractCall, (result)=>{\n\t\t      \t\t\tsetRemoving(false)\n\t\t      \t\t\tUserDispatch({\n\t\t      \t\t\t\ttype: 'add_transaction',\n\t\t      \t\t\t\ttx: result\n\t\t      \t\t\t})\n\t\t      \t\t}, (result)=>{\n\t\t      \t\t\tsetAdding(false)\n\t\t      \t\t\tUserDispatch({\n\t\t      \t\t\t\ttype: 'add_transaction',\n\t\t      \t\t\t\ttx: result\n\t\t      \t\t\t})\n\t\t      \t\t})\n\t\t      \t}}>\n\t\t\t\t\t{adding ? <Spinner size=\"sm\" /> : 'Yes'}\n\t\t\t\t</Button>\n\t\t    </PopoverBody>\n\t  \t</UncontrolledPopover>\n\t</>\n}","import React from 'react';\nimport {FormGroup, Input, Label, Button, Spinner,\nUncontrolledPopover,\nPopoverHeader,\nPopoverBody,\nAlert\n} from 'reactstrap';\n\n\n\n\nimport contractCall from '../common/utils/contractCall';\nimport {\n  UserContext\n} from '../store/UserContext';\n\nimport { useConnect } from \"@stacks/connect-react\";\n\nimport ReadOnly from '../common/utils/readonly';\n\n\nexport default function MintEvent (props) {\n\t\n\tconst [loaded, setLoaded] = React.useState(false)\n\tconst [current, setCurrent] = React.useState(null)\n\n\n\tconst {doContractCall} = useConnect();\n\tconst {UserState, UserDispatch} = React.useContext(UserContext);\n\n\tconst [is_open, setIsOpen] = React.useState(false)\n\t\n\tconst [stx, setStx] = React.useState(0)\n\tconst [_private, setPrivate] = React.useState(0)\n\tconst [addrm, setAddrm] = React.useState(0)\n\n\tconst [adding, setAdding] = React.useState(false)\n\tconst [removing, setRemoving] = React.useState(false)\n\n\tReact.useEffect(() => {\n\t\tif(!loaded) {\n\n\t\t    // Update the document title using the browser API\n\t\t     ReadOnly.isOpenMinting([], UserState, (result) => {\n\t\t    \t\n\t\t    \t\n\t\t    \tsetIsOpen(result)\n\t\t    \tif(result) {\n\t\t    \t\tReadOnly.currentMintEvent([], UserState, (result) => {\n\t\t    \t\t\tconsole.log('event', result);\n\t\t    \t\t\tsetLoaded(true)\n\t\t    \t\t\tsetCurrent(result)\n\n\t\t    \t\t}, (result) => {\n\t\t    \t\t\tsetLoaded(true)\n\t\t    \t\t})\n\t\t    \t} else {\n\t\t    \t\tsetLoaded(true)\n\t\t    \t}\n\t\t    })\n\n\t\t}\n\t});\n\t\n\treturn loaded ? <>{!is_open ? <>\n\t\t<h3>Open mint event</h3>\n\t\t<p>Fill in the form and confirm opening</p>\n\t\t<FormGroup floating>\n\t\t\t<Input value={stx} type=\"number\" id=\"fee\" onChange={(e)=>setStx(e.target.value)} />\n\t\t\t<Label for=\"fee\">\n\t\t        STX Fee\n\t      \t</Label>\n\t\t</FormGroup>\n\t\t\n\t\t<FormGroup floating>\n\t\t\t<Input type=\"select\" value={_private} id=\"import\" onChange={(e)=>setPrivate(e.target.value)}>\n\t\t\t\t<option value=\"0\">\n\t\t        \tPublic\n\t\t      \t</option>\n\t\t      \t<option value=\"1\">\n\t\t        \tPrivate\n\t\t      \t</option>\n\t      \t</Input>\n\t\t\t<Label for=\"import\">\n\t\t        Public/Private\n\t      \t</Label>\n\t\t</FormGroup>\n\n\t\t<FormGroup floating>\n\t\t\t<Input value={addrm} type=\"number\" id=\"fee\" onChange={(e)=>setAddrm(e.target.value)} />\n\t\t\t<Label for=\"fee\">\n\t\t        MAX mint per address\n\t      \t</Label>\n\t\t</FormGroup>\n\t\t<Button id=\"confirm_open\" color=\"primary\" style={{color: '#fff'}} className=\"mb-3\" size=\"md\" onClick={async () => null}>\n\t\t\t{adding ? <Spinner size=\"sm\" /> : <b>Confirm</b>}\n\t\t</Button>\n\n\n\t\t<UncontrolledPopover\n\t\t    placement=\"bottom\"\n\t\t    target=\"confirm_open\"\n\t\t    trigger=\"focus\"\n\t\t  >\n\t\t    <PopoverBody>\n\t\t      Are you sure to add this address?<br />\n\t\t      \t<Button color=\"primary\" style={{color: '#fff'}} className=\"mb-3\" size=\"sm\" onClick={async () => {\n\t\t      \t\tif(adding) return;\n\t\t      \t\tsetAdding(true)\n\t\t      \t\tcontractCall.openMintEvent({mint_price: stx, public_value: _private, address_mint: addrm}, UserState, doContractCall, (result)=>{\n\t\t      \t\t\t\n\t\t      \t\t\tsetAdding(false)\n\t\t      \t\t\tUserDispatch({\n\t\t      \t\t\t\ttype: 'add_transaction',\n\t\t      \t\t\t\ttx: result\n\t\t      \t\t\t})\n\t\t      \t\t\tsetIsOpen(true)\n\t\t      \t\t}, (result)=>{\n\t\t      \t\t\tsetAdding(false)\n\t\t      \t\t\tUserDispatch({\n\t\t      \t\t\t\ttype: 'add_transaction',\n\t\t      \t\t\t\ttx: result\n\t\t      \t\t\t})\n\t\t      \t\t})\n\t\t      \t}}>\n\t\t\t\t\t{adding ? <Spinner size=\"sm\" /> : 'Yes'}\n\t\t\t\t</Button>\n\t\t    </PopoverBody>\n\t  \t</UncontrolledPopover>\n\t  \t</> : <>\n\t  \t\t{\n\t  \t\t\tcurrent ? <>\n\t  \t\t\t\t<h3>#{current.id?.value}</h3>\n\t  \t\t\t\t<p><span style={{fontSize: 46}}>\n\t  \t\t\t\t<svg style={{width: 40, height: 40, marginRight: 8, fill: 'none', display: 'inline'}} viewBox=\"0 0 22 22\" class=\"css-1n04boc\"><path d=\"M4.18817 0.940674L9.37024 8.99389M9.37024 8.99389H0.266602M9.37024 8.99389H12.7316\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linejoin=\"bevel\"></path><path d=\"M17.9129 0.940674L12.7308 8.99389H21.8345\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linejoin=\"bevel\"></path><path d=\"M4.18817 21.4407L9.37024 13.3875M9.37024 13.3875H0.266602M9.37024 13.3875H12.7316\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linejoin=\"bevel\"></path><path d=\"M17.9129 21.4407L12.7308 13.3875H21.8345\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linejoin=\"bevel\"></path></svg>\n\t  \t\t\t\t<b>STX:</b> <i style={{color: '#f82a5c', fontWeight: 'bold', fontStyle: 'normal'}}>{current.mint_price.value}</i></span><br />\n\t  \t\t\t\t\t<b>Public:</b> {parseInt(current.public_value.value) === 0 ? 'YES' : 'NO'}\n\t  \t\t\t\t</p>\n\t  \t\t\t\t<Button color=\"danger\" style={{color: '#fff'}} className=\"mt-3\" onClick={async () => {\n\t  \t\t\t\t\tif(removing) return;\n\t\t\t      \t\tsetRemoving(true)\n\t\t\t      \t\tcontractCall.closeMintEvent({}, UserState, doContractCall, (result)=>{\n\t\t\t      \t\t\tsetRemoving(false)\n\t\t\t      \t\t\tUserDispatch({\n\t\t\t      \t\t\t\ttype: 'add_transaction',\n\t\t\t      \t\t\t\ttx: result\n\t\t\t      \t\t\t})\n\t\t\t      \t\t\tsetIsOpen(false)\n\t\t\t      \t\t}, (result)=>{\n\t\t\t      \t\t\tsetRemoving(false)\n\t\t\t      \t\t\tUserDispatch({\n\t\t\t      \t\t\t\ttype: 'add_transaction',\n\t\t\t      \t\t\t\ttx: result\n\t\t\t      \t\t\t})\n\t\t\t      \t\t})\n\t\t\t      \t}}>\n\t\t\t\t\t\t{removing ? <Spinner size=\"sm\" /> : 'Close event'}\n\t\t\t\t\t</Button>\n\t  \t\t\t</>\n\t  \t\t\t: <>\n\t  \t\t\t<Alert\n\t\t\t\t    color=\"primary\"\n\t\t\t\t  >\n\t\t\t\t    Maybe a mint event is coming\n\t\t\t\t  </Alert>\n\t  \t\t\t</>\n\t  \t\t}\n\t  \t</>}\n\t</> : <Spinner color=\"primary\" />\n}","import React from 'react';\nimport {FormGroup, Input, Label, Button, Spinner,\nUncontrolledPopover,\nPopoverHeader,\nPopoverBody,\nAlert\n} from 'reactstrap';\n\nimport AceEditor from \"react-ace\";\n\nimport contractCall from '../common/utils/contractCall';\nimport {\n  UserContext\n} from '../store/UserContext';\n\nimport { useConnect } from \"@stacks/connect-react\";\n\nimport ReadOnly from '../common/utils/readonly';\n\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\n\n\n\n\nexport default function MintEvent (props) {\n\t\n\tconst [loaded, setLoaded] = React.useState(false)\n\tconst [json_val, setJsonVal] = React.useState('')\n\n\n\tconst {doContractCall} = useConnect();\n\tconst {UserState, UserDispatch} = React.useContext(UserContext);\n\n\t\n\tconst [adding, setAdding] = React.useState(false)\n\n\tconst [total_to_add, setTotalToAdd] = React.useState(0)\n\tconst [added, setAdded] = React.useState(0)\n\n\tconst mintPunks = (current_i, chunk, full_array) => {\n\n\t\tlet last_index = (current_i + chunk);\n\t\tlet list = full_array.slice(current_i, last_index);\n\t   \n\t\tcontractCall.addPunk({list: list}, UserState, doContractCall, (result)=>{\n  \t\t\t\n  \t\t\tUserDispatch({\n  \t\t\t\ttype: 'add_transaction',\n  \t\t\t\ttx: result\n  \t\t\t})\n  \t\t\tsetAdded(last_index)\n  \t\t\t\n  \t\t\tif(full_array.length > ( last_index - 1 )) {\n  \t\t\t\tsetTimeout(()=>mintPunks(last_index, chunk, full_array), 500)\n  \t\t\t} else {\n  \t\t\t\tsetAdding(false)\n  \t\t\t}\n\n  \t\t}, (result)=>{\n  \t\t\tsetAdding(false)\n  \t\t\tUserDispatch({\n  \t\t\t\ttype: 'add_transaction',\n  \t\t\t\ttx: result\n  \t\t\t})\n  \t\t})\n\t}\n\n\treturn <>\n\t\t<h3>Add punks to collection</h3>\n\t\t<p>Copy and paste a json array in the editor and then call the function</p>\n\t\t{adding ? <>\n\t\t\t<p>Process: {added}/{total_to_add}</p>\n\t\t\t</> : <AceEditor\n\t\t    mode=\"json\"\n\t\t    onChange={(newValue)=>setJsonVal(newValue)}\n\t\t    name=\"editor_json\"\n\t\t    editorProps={{ $blockScrolling: true }}\n\t\t  />}\n\t\t<Button color=\"primary\" style={{color: '#fff'}} className=\"mt-3\" onClick={async () => {\n\t\t\tif(adding) return;\n\n\t\t\tlet values = JSON.parse(json_val)\n\t\t\tsetTotalToAdd(values.length)\n\t\t\tsetAdding(true)\n\t\t\tmintPunks(0, 2, values);\n      \t\t\n      \t}}>\n\t\t\t{adding ? <Spinner size=\"sm\" /> : 'Add list'}\n\t\t</Button>\n\t\t\n\t\t\n\t  </> \n}\n\n\n","import React from 'react'\nimport { useConnect } from \"@stacks/connect-react\";\nimport { StacksMainnet, StacksTestnet } from '@stacks/network';\nimport {callReadOnlyFunction} from '@stacks/transactions';\nimport { Person } from '@stacks/profile';\n\n\nimport { Button, Spinner, Row, Col, Container, \n\tNav, NavItem, NavLink \n} from 'reactstrap';\nimport ReadOnly from '../common/utils/readonly';\nimport {\n  UserContext\n} from '../store/UserContext';\nimport { userSession } from '../common/utils/auth';\n\nimport Whitelist from './Whitelist'\nimport MintEvent from './MintEvent'\nimport AddPunks from './AddPunks'\n\n\n\n\nconst avatarUrl = (UserState) => {\n    const person = new Person(UserState.userData.profile)\n    return person.avatarUrl();\n  };\n\n\n\n\nexport default class SignedInClass extends React.Component {\n\n\tstatic contextType = UserContext;\n\n\tstate = {\n\t\tloading: true,\n\t\tmounted: false,\n\t\tcurrentTab: 'mint'\n\t}\n\n\t\n\n\tcomponentDidMount() {\n\t\tthis.setState({loading: false})\n\t\tthis.context.UserDispatch({\n\t    \t\ttype: 'update',\n\t    \t\tobj: {\n\t    \t\t\tisOwner: true\n\t    \t\t}\n\t    \t})\n\t\t/*ReadOnly.isCtxOwner([], this.context.UserState, (result) => {\n\t    \tconsole.log('is owner', result)\n\t    \tthis.setState({loading: false})\n\t    \tthis.context.UserDispatch({\n\t    \t\ttype: 'update',\n\t    \t\tobj: {\n\t    \t\t\tisOwner: result\n\t    \t\t}\n\t    \t})\n\t    })*/\n\t}\n\t\n\tgetChild() {\n\t\tswitch(this.state.currentTab){\n\t\t\tcase 'whitelist': return <Whitelist />\n\t\t\tcase 'event': return <MintEvent />\n\t\t\tcase 'add_punk': return <AddPunks />\n\t\t\tdefault: return <Button color=\"primary\" className=\"sign-out\" onClick={async () => {\n\t\t\t\t\t\t\t//doContractCall({\n\t\t\t\t\t\t      //contractAddress: addr,\n\t\t\t\t\t\t      //contractName: 'punk-army-nft-new',\n\t\t\t\t\t\t      //functionName: 'get-last-token-id',\n\t\t\t\t\t\t      //functionArgs: [],\n\t\t\t\t\t\t      //onFinish: (returned) => console.log('onFinish', returned),\n\t\t\t\t\t\t      //onCancel: (returned) => console.log('onCancel', returned),\n\t\t\t\t\t\t      ////network: _network,\n\t\t\t\t\t\t      ////stxAddress: props.userData.profile.stxAddress.testnet,\n\t\t\t\t\t\t    //});\n\t\t\t\t\t\t    \n\t\t\t\t\t\t    ReadOnly.getLastTokenId([], this.context.UserState, (result) => {\n\t\t\t\t\t\t    \tconsole.log('last nft', result)\n\t\t\t\t\t\t    })\n\n\t\t\t\t\t\t    ReadOnly.isCtxOwner([], this.context.UserState, (result) => {\n\t\t\t\t\t\t    \tconsole.log('is owner', result)\n\t\t\t\t\t\t    })\n\n\t\t\t\t\t\t    ReadOnly.getLastPunkId([], this.context.UserState, (result) => {\n\t\t\t\t\t\t    \tconsole.log('last punk', result)\n\t\t\t\t\t\t    })\n\n\t\t\t\t\t\t    ReadOnly.isOpenMinting([], this.context.UserState, (result) => {\n\t\t\t\t\t\t    \tconsole.log('open minting', result)\n\t\t\t\t\t\t    \t\n\t\t\t\t\t\t    })\n\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}}>{this.state.loading ? <Spinner size=\"sm\" /> : 'TEST'}</Button>\n\t\t}\n\t}\n\n\trender() {\n\t\treturn <Container fluid={true}>\n\t\t\t<Row>\n\t\t\t\t<Col xs={12} sm={6} md={4} className=\"p-3\">\n\t\t\t\t\t{\n\t\t\t\t\t\t!this.state.loading ?\n\t\t\t\t\t\t<Nav\n\t\t\t\t\t\t    pills\n\t\t\t\t\t\t    vertical\n\t\t\t\t\t\t  >\n\t\t\t\t\t\t    <NavItem>\n\t\t\t\t\t\t      <NavLink\n\t\t\t\t\t\t        active={this.state.currentTab === 'mint'}\n\t\t\t\t\t\t        onClick={()=>this.setState({currentTab: 'mint'})}\n\t\t\t\t\t\t        href=\"#\"\n\t\t\t\t\t\t      >\n\t\t\t\t\t\t        Mint your punk\n\t\t\t\t\t\t      </NavLink>\n\t\t\t\t\t\t    </NavItem>\n\t\t\t\t\t\t    {this.context.UserState.isOwner ? <NavItem>\n\t\t\t\t\t\t      <NavLink href=\"#\" \n\t\t\t\t\t\t      \tactive={this.state.currentTab === 'whitelist'}\n\t\t\t\t\t\t        onClick={()=>this.setState({currentTab: 'whitelist'})}>\n\t\t\t\t\t\t        Whitelist\n\t\t\t\t\t\t      </NavLink>\n\t\t\t\t\t\t    </NavItem> : null}\n\t\t\t\t\t\t    {this.context.UserState.isOwner ? <NavItem>\n\t\t\t\t\t\t      <NavLink href=\"#\"\n\t\t\t\t\t\t      \tactive={this.state.currentTab === 'event'}\n\t\t\t\t\t\t        onClick={()=>this.setState({currentTab: 'event'})}\n\t\t\t\t\t\t      \t>\n\t\t\t\t\t\t        Mint event\n\t\t\t\t\t\t      </NavLink>\n\t\t\t\t\t\t    </NavItem> : null}\n\t\t\t\t\t\t    {this.context.UserState.isOwner ? <NavItem>\n\t\t\t\t\t\t      <NavLink href=\"#\"\n\t\t\t\t\t\t      \tactive={this.state.currentTab === 'add_punk'}\n\t\t\t\t\t\t        onClick={()=>this.setState({currentTab: 'add_punk'})}\n\t\t\t\t\t\t      >\n\t\t\t\t\t\t        Add punks\n\t\t\t\t\t\t      </NavLink>\n\t\t\t\t\t\t    </NavItem> : null}\n\t\t\t\t\t\t  </Nav>\n\t\t\t\t\t  : <Spinner />\n\t\t\t\t\t}\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={12} sm={6} md={8}>\n\t\t\t\t\t<div style={{textAlign: 'right'}}>\n\t\t\t\t\t\t{avatarUrl(this.context.UserState) ? <img src={avatarUrl(this.context.UserState)} /> : null}\n\t\t\t\t\t\t<Button className=\"sign-out\" style={{marginLeft: 12}} color=\"link\" onClick={async () => {\n\t\t\t\t\t\t\tuserSession.signUserOut();\n\t          \t\t\t\tthis.context.UserDispatch({\n\t\t\t\t\t    \t\ttype: 'logout'\n\t\t\t\t\t    \t})\n\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tSign out\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"clearfix\"></div>\n\t\t\t\t\t<Container fluid=\"true\">\n\t\t\t\t\t\t{this.getChild()}\n\t\t\t\t\t</Container>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t\n\t\t</Container>\n\t}\n}\n","import React from 'react';\nimport { useConnect } from '@stacks/connect-react';\nimport { Button, Spinner } from 'reactstrap';\n\nconst SignIn = (props) => {\n  const [loading, setLoading] = React.useState(false)\n  const { doOpenAuth } = useConnect();\n  \n  return (<div style={{alignItems: 'center'}}>\n    <h1 className=\"title\">Punks Army NFT Club</h1>\n    <Button color=\"primary\" style={{color: '#fff', display: 'block', margin: '60px auto', textTransform: 'uppercase'}} size=\"lg\" \n    onClick={() => {\n      setLoading(true)\n      doOpenAuth()\n      setLoading(false)\n    }}>{loading ? <Spinner /> : <b>Join the club</b>}</Button>\n    </div>);\n};\n\nexport default SignIn;","import React from 'react';\nimport { ThemeProvider, theme, CSSReset, ToastProvider } from '@blockstack/ui';\nimport { userSession, authOptions } from '../common/utils/auth';\nimport { Connect } from '@stacks/connect-react';\nimport {\n  UserContext\n} from '../store/UserContext';\n\nimport SignedIn from './SignedIn';\nimport SignIn from './SignIn';\n\n\nexport default class Main extends React.Component {\n  \n  static contextType = UserContext;\n  \n  state = {\n    user: {}\n  }\n\n  componentDidMount() {\n\n    console.log('ctx', this.context)\n    \n    if (userSession.isSignInPending()) {\n      userSession.handlePendingSignIn().then(userData => {\n        console.log('userData', userData)\n        window.history.replaceState({}, document.title, '/');\n        \n        this.setState({ user: userData });\n        this.context.UserDispatch({\n          type: 'update',\n          obj: {\n            logged: true,\n            userData: userData\n          }\n        });\n\n      });\n\n    } else if (userSession.isUserSignedIn()) {\n      \n      let userData = userSession.loadUserData()\n      console.log('userData', userData)\n      this.setState({ user: userData });\n      this.context.UserDispatch({\n        type: 'update',\n        obj: {\n          logged: true,\n          userData: userData\n        }\n      });\n\n    }\n  }\n\n  render() {\n    return (<ThemeProvider theme={theme}>\n        <Connect authOptions={authOptions}>\n            <ToastProvider>\n            <img className=\"app_logo\" src=\"./images/logo.png\" />\n              <div className=\"site-wrapper\">\n                <div className=\"site-wrapper-inner\">\n                  {/*<Header />*/}\n                  {!this.context.UserState.logged ? <SignIn /> : <SignedIn />}\n                </div>\n              </div>\n            </ToastProvider>\n            <CSSReset />\n          </Connect>\n      </ThemeProvider>\n    );\n  }\n};\n","import React from 'react';\n\nimport logo from './logo.svg';\nimport './App.scss';\n\nimport Main from './pages/Main';\nimport {\n\tUserContextProvider\n} from './store/UserContext';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserContextProvider>\n      \t<Main />\n      </UserContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}